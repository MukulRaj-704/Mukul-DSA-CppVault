/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
####################################################################################################
OPTIMAL SOLUTION
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* head = l1; 
        ListNode* prev = nullptr;
        int carry = 0;
        while (l1 || l2 || carry) {
            int val1 = (l1 != nullptr) ? l1->val : 0;
            int val2 = (l2 != nullptr) ? l2->val : 0;
            int sum = val1 + val2 + carry;
            carry = sum / 10;
            int digit = sum % 10;

            if (l1) {
                l1->val = digit;
                prev = l1;
                l1 = l1->next;
            } else {
                prev->next = new ListNode(digit);
                prev = prev->next;
            }
            if (l2) l2 = l2->next;
        }
        return head;
    }
};

