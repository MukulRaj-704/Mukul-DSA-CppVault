class Solution {
public:
    int shipWithinDays(vector<int>& weights, int days) {
        
        int n= weights.size();
        int high=0;
        for(int num=0;num<weights.size();num++){
            high+=weights[num];
        }
        int low=*max_element(weights.begin(),weights.end());
        while(low<high){
            int mid = (low+high)/2;
            int dayreq= loading(weights,mid);
            if(dayreq<= days){
                high=mid;
            }
            else{
                low=mid+1;
            }
        }
       
  return low;  }

int loading(vector<int> arr, int capacity){
    int day =1;
    int load=0;
    int n= arr.size();
    for(int i=0;i<n;i++){
        if(load+arr[i]>capacity){
            day++;
            load=arr[i];
        }
        else{
            load+=arr[i];
        }
    }
  return day;}
};
